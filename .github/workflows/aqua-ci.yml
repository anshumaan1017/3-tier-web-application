name: Aqua-Scan

on:
  push:
    branches:
      - main

jobs:
  aqua-misconfiguration-scan:
    name: Aqua scanner
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
      actions: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --scanners misconfig,vuln,secret --sast --reachability . 
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet/gradle non-lock file scanning, add: --package-json / --dotnet-proj / --gradle
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          AQUA_URL: https://api.eu-1.supply-chain.cloud.aquasec.com
          CSPM_URL: https://eu-1.api.cloudsploit.com 
          TRIVY_RUN_AS_PLUGIN: 'aqua'

  docker-build-scan: 
    name: Docker Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      id-token: write
      packages: write
      actions: read
      security-events: write

   #needs: [aqua-misconfiguration-scan]
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }} # name of Docker Hub Org ID
      IMAGE_NAME: 3-tier-web-application
      IMAGE_TAG: ${{ github.run_number }} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG}}

      - name: Login to Aqua Registry
        uses: docker/login-action@v3
        with:
          registry: registry.aquasec.com
          username: ${{ secrets.AQUA_REGISTRY_USERNAME }}
          password: ${{ secrets.AQUA_REGISTRY_PASS }}
          
      - name: Image Scan with Trivy Premium
        run: |
          docker run \
              -e BUILD_JOB_NAME=${{ env.IMAGE_NAME }} \
              -e BUILD_NUMBER=${{ env.IMAGE_TAG }} \
              --rm \
              -v /var/run/docker.sock:/var/run/docker.sock \
              registry.aquasec.com/scanner:2022.4 scan \
              --host ${{ secrets.AQUA_HOST }} \
              --local ${{ env.DOCKER_REPOSITORY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              --token ${{ secrets.AQUA_TOKEN }} \
              --layer-vulnerabilities \
              --no-verify \
              --sarif > image-results.sarif

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: image-results.sarif


      - name: SBOM/Manifest Generation
        run: |
          export BILLY_SERVER=https://billy.eu-1.codesec.aquasec.com
          curl -sLo install.sh https://download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum

          if ! cat install.sh.checksum | sha256sum --check; then
            echo "install.sh checksum failed"
            exit 1
          fi

          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum

          ./billy generate \
            --access-token "${{ secrets.GITHUB_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --cspm-url https://eu-1.api.cloudsploit.com \
            --artifact-path "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.TAG }}"
